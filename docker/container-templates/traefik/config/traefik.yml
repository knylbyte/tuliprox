api:
  dashboard: true
  debug: false

entryPoints:
  web:
    address: ":80"
    http:
      middlewares:
        - redirect-to-https@file          # ssllabs.com -> A+ rating
  websecure:
    address: ":443"
    http:
      middlewares:
        - global-chain@file               # optional, only if you want to use CrowdSec and security headers | ssllabs.com -> A+ rating
      tls:
        certResolver: cloudflare
        options: default
    forwardedHeaders:
      insecure: false
      trustedIPs:
        - "127.0.0.1/32"

  shadowsocks-tcp:
    address: ":9388/tcp"
  shadowsocks-udp:
    address: ":9388/udp"

  socks5h-tcp:
    address: ":1388/tcp"
  socks5h-udp:
    address: ":1388/udp"

  http-proxy:
    address: ":1080/tcp"
  https-proxy:
    address: ":9443/tcp"

serversTransport:
  insecureSkipVerify: true

ocsp: {}

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
  file:
    directory: /etc/traefik/dynamic/
    watch: true

certificatesResolvers:
  cloudflare:
    acme:
      caServer: https://acme-v02.api.letsencrypt.org/directory  # production (default)
      # caServer: https://acme-staging-v02.api.letsencrypt.org/directory # staging (testing)
      email: <your@email.com>                                                                   # change to your email
      storage: /etc/traefik/acme.json
      dnsChallenge:
        provider: cloudflare  # change as required
        # disablePropagationCheck: true # Some people using Cloudflare note this can solve DNS propagation issues.
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"
log:
  level: "INFO"
  filePath: "/var/log/traefik/traefik.log"
accessLog:
  filePath: "/var/log/traefik/access.log"
